# 1 "main.c"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "main.c"



# 1 "numbers.h" 1
# 14 "numbers.h"
unsigned short numbers[] = {

    0,0,1,1,1,1,0,0,
    0,1,1,0,0,0,1,0,
    0,1,1,0,0,1,1,0,
    0,1,1,0,1,0,1,0,
    0,1,1,1,0,0,1,0,
    0,1,1,0,0,0,1,0,
    0,1,1,0,0,0,1,0,
    0,0,1,1,1,1,0,0,

    0,0,0,0,1,0,0,0,
    0,0,1,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,1,1,1,1,0,0,

    0,0,1,1,1,1,0,0,
    0,1,1,1,1,1,1,0,
    0,1,0,0,0,0,1,0,
    0,0,0,0,0,1,1,0,
    0,0,0,0,1,1,0,0,
    0,0,0,1,1,0,0,0,
    0,0,1,1,0,0,0,0,
    0,1,1,1,1,1,1,0,

    0,0,1,1,1,1,0,0,
    0,1,1,1,1,1,1,0,
    0,1,0,0,0,0,1,0,
    0,0,0,0,0,0,1,0,
    0,0,0,1,1,1,0,0,
    0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,
    0,0,1,1,1,1,0,0,

    0,0,0,0,1,1,0,0,
    0,0,0,1,1,1,0,0,
    0,0,1,1,0,1,0,0,
    0,1,1,0,0,1,0,0,
    0,1,1,1,1,1,0,0,
    0,0,0,0,1,1,0,0,
    0,0,0,0,1,1,0,0,
    0,0,0,0,1,1,0,0,

    0,1,1,1,1,1,1,0,
    0,1,1,1,1,1,1,0,
    0,1,1,0,0,0,0,0,
    0,1,1,0,0,0,0,0,
    0,0,1,1,1,1,0,0,
    0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,
    0,0,1,1,1,1,0,0,

    0,0,0,1,1,1,1,0,
    0,0,1,1,1,1,1,0,
    0,1,1,0,0,0,0,0,
    0,1,1,0,0,0,0,0,
    0,1,1,1,1,1,0,0,
    0,1,1,0,0,0,1,0,
    0,1,1,0,0,0,1,0,
    0,0,1,1,1,1,0,0,

    0,1,1,1,1,1,1,0,
    0,1,1,1,1,1,1,0,
    0,1,0,0,0,1,1,0,
    0,0,0,0,1,1,0,0,
    0,0,0,0,1,1,0,0,
    0,0,0,1,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,1,1,0,0,0,0,

    0,0,1,1,1,1,0,0,
    0,1,1,1,1,1,1,0,
    0,1,1,0,0,0,1,0,
    0,0,1,0,0,0,1,0,
    0,0,1,1,1,1,0,0,
    0,1,1,0,0,0,1,0,
    0,1,1,0,0,0,1,0,
    0,0,1,1,1,1,0,0,

    0,0,1,1,1,1,0,0,
    0,1,1,1,1,1,1,0,
    0,1,1,0,0,0,1,0,
    0,1,1,0,0,0,1,0,
    0,0,1,1,1,1,1,0,
    0,0,0,0,0,1,1,0,
    0,0,0,0,0,1,1,0,
    0,0,0,0,0,1,1,0,
};
# 5 "main.c" 2
# 1 "gba.h" 1







typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

typedef signed char s8;
typedef signed short s16;
typedef signed int s32;

typedef unsigned char byte;
typedef unsigned short hword;
typedef unsigned int word;
# 211 "gba.h"
enum
{
    VBLANK_HANDLER,
    HBLANK_HANDLER,
    VCOUNT_HANDLER,
    TIMER0_HANDLER,
    TIMER1_HANDLER,
    TIMER2_HANDLER,
    TIMER3_HANDLER,
    SERIAL_COM_HANDLER,
    DMA0_HANDLER,
    DMA1_HANDLER,
    DMA2_HANDLER,
    DMA3_HANDLER,
    KEYS_HANDLER,
    CART_HANDLER,
    MAX_INTERRUPT_HANDLERS,
};
# 267 "gba.h"
typedef void (*fp)(void);
# 6 "main.c" 2


# 1 "gamestate.h" 1
# 1 "drawsprites.h" 1
void drawSprite(int numb, int N, int x, int y)
{

    *(unsigned short *)(0x7000000 + 8*N) = y | 0x2000;
    *(unsigned short *)(0x7000002 + 8*N) = x;
    *(unsigned short *)(0x7000004 + 8*N) = numb*2;
}
# 2 "gamestate.h" 2



int score = 0;
int game_over = 0;
int gamestate = 0;

void main_screen() {
    int first = 80;
    int second = 96;
# 32 "gamestate.h"
}

void level_1(){

    int i = 0;
    int j = 0;
    int k = 10;


    for(i = 0; i < 160; i += 16) {


        j++;
        k++;
    }


    drawSprite(1, 20, 208, 16);




    while(score < 100 && !game_over){

    }

    if(game_over) {
        gamestate = 0;
    } else {
        gamestate = 2;
    }
}

void level_2(){

    int i = 0;
    int j = 0;
    int k = 10;


    for(i = 0; i < 160; i += 16) {


        j++;
        k++;
    }

    while(!game_over) {


        gamestate = 0;
    }
}
# 9 "main.c" 2
# 1 "mygbalib.h" 1
# 1 "sprites.h" 1





int palette[] = {
    ((0) + (0<<5) + (0<<10)),
    ((31) + (31<<5) + (31<<10)),
    ((0) + (31<<5) + (31<<10)),
    ((26) + (26<<5) + (26<<10)),
    ((9) + (9<<5) + (9<<10)),
    ((31) + (31<<5) + (0<<10)),
    ((31) + (0<<5) + (0<<10)),
    ((0) + (0<<5) + (31<<10)),
    ((11) + (8<<5) + (3<<10)),
    ((27) + (27<<5) + (27<<10)),
    ((16) + (16<<5) + (16<<10)),
    ((31) + (17<<5) + (17<<10)),
    ((31) + (24<<5) + (24<<10)),
    ((27) + (0<<5) + (0<<10)),
    ((0) + (16<<5) + (0<<10)),
    ((0) + (31<<5) + (0<<10)),
    ((16) + (31<<5) + (16<<10)),
    ((23) + (31<<5) + (23<<10)),
    ((31) + (0<<5) + (31<<10)),
    ((31) + (15<<5) + (0<<10))
};



u16 sprites[] = {


   0, 0, 0, 0, 0, 0, 0, 0,
   2, 2, 2, 2, 2, 2, 2, 2,
   2, 2, 2, 2, 2, 2, 2, 2,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,


   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,
   0, 2, 2, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0,
   2, 2, 2, 2, 2, 2, 2, 2,
   2, 2, 2, 2, 2, 2, 2, 2,
   0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,
   0, 0, 0, 0, 0, 2, 2, 0,





   0, 0, 0, 0, 0, 0, 0, 0,
        0, 7, 7, 0, 0, 0, 0, 0,
        0, 7, 7, 0, 0, 0, 0, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 7, 7, 7, 7, 0, 0, 0,
        0, 7, 7, 7, 7, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 0, 0, 0, 0, 7, 7, 0,
        0, 0, 0, 0, 0, 7, 7, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 7, 7, 7, 7, 0,
        0, 0, 0, 7, 7, 7, 7, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,





   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 7, 7, 0,
        0, 0, 0, 0, 0, 7, 7, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


   0, 0, 0, 0, 0, 0, 0, 0,
        0, 7, 7, 7, 7, 0, 0, 0,
        0, 7, 7, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 7, 7, 7, 7, 7, 7, 0,
        0, 7, 7, 0, 0, 0, 0, 0,
        0, 7, 7, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 0, 0, 0,
        0, 0, 0, 7, 7, 7, 7, 0,
        0, 0, 0, 7, 7, 7, 7, 0,
        0, 0, 0, 0, 0, 0, 0, 0,






   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 7, 7, 7, 7, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,






   0, 0, 0, 0, 0, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 16, 16, 0, 0, 0,
        0, 0, 0, 16, 16, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 16, 16, 0, 0, 0, 0, 0,
        0, 16, 16, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 16, 16, 16, 16, 0, 0, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 16, 16, 0,
        0, 0, 0, 0, 0, 16, 16, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 16, 16, 16, 16, 0,
        0, 0, 0, 16, 16, 0, 0, 0,
        0, 0, 0, 16, 16, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,






        0, 0, 0, 0, 0, 0, 0, 0,
        0, 18, 18, 18, 18, 18, 18, 0,
        0, 18, 18, 18, 18, 18, 18, 0,
        0, 0, 0, 18, 18, 0, 0, 0,
        0, 0, 0, 18, 18, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


        0, 0, 0, 0, 0, 0, 0, 0,
        0, 18, 18, 0, 0, 0, 0, 0,
        0, 18, 18, 0, 0, 0, 0, 0,
        0, 18, 18, 18, 18, 0, 0, 0,
        0, 18, 18, 18, 18, 0, 0, 0,
        0, 18, 18, 0, 0, 0, 0, 0,
        0, 18, 18, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

   0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 18, 18, 0, 0, 0,
        0, 0, 0, 18, 18, 0, 0, 0,
        0, 18, 18, 18, 18, 18, 18, 0,
        0, 18, 18, 18, 18, 18, 18, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 18, 18, 0,
        0, 0, 0, 0, 0, 18, 18, 0,
        0, 0, 0, 18, 18, 18, 18, 0,
        0, 0, 0, 18, 18, 18, 18, 0,
        0, 0, 0, 0, 0, 18, 18, 0,
        0, 0, 0, 0, 0, 18, 18, 0,
        0, 0, 0, 0, 0, 0, 0, 0,






        0, 0, 0, 0, 0, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,


        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 6, 6, 0, 0, 0,
        0, 0, 0, 6, 6, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 6, 6, 0, 0, 0, 0, 0,
        0, 6, 6, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 6, 6, 6, 6, 0, 0, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 6, 6, 0,
        0, 0, 0, 0, 0, 6, 6, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 6, 6, 6, 6, 0,
        0, 0, 0, 6, 6, 0, 0, 0,
        0, 0, 0, 6, 6, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,

};
# 2 "mygbalib.h" 2



void checkbutton(void)
{

}


void fillPalette(void)
{
    int i;


    for (i = 0; i < 20; i++)
        ((unsigned short *) 0x5000200)[i] = palette[i];
}


void fillSprites(void)
{
    int i;


    for (i = 0; i < sizeof(sprites) / 2; i++)
        ((unsigned short *) 0x6010000)[i] = (sprites[i*2+1] << 8) + sprites[i*2];


    for(i = 0; i < 128; i++)
        drawSprite(0, i, 240, 160);
}

void drawTetromino(int tetromino, int x, int y)
{

    drawSprite(tetromino, 0, x, y);
    drawSprite(tetromino + 1, 1, x + 8, y);
    drawSprite(tetromino + 2, 2, x, y + 8);
    drawSprite(tetromino + 3, 3, x + 8, y + 8);
}

void drawITetromino2(int x, int y)
{

    drawSprite(0, 0, x, y);
    drawSprite(0 + 1, 1, x + 8, y);
    drawSprite(0 + 2, 2, x, y + 8);
    drawSprite(0 + 3, 3, x + 8, y + 8);
}
# 10 "main.c" 2

int count = 0;
int points_gained;



void assembly(void) {

}


void Handler(void) {
    *(u16*)0x4000208 = 0x00;


    if (((*(volatile u16*)0x4000202 & 0x8) == 0x8) || ((*(volatile u16*)0x4000202 & 0x10) == 0x10)) {

        if (points_gained) {
            score++;
        }


        int temp = score;
        int digit = 0;
        while (temp > 0) {
            drawSprite(temp % 10, digit, 208 - 10 * digit, 112);
            temp /= 10;
            digit++;
        }

    }


    if ((*(volatile u16*)0x4000202 & 0x1000) == 0x1000) {
        checkbutton();
    }

    *(volatile u16*)0x4000202 = *(volatile u16*)0x4000202;
    *(u16*)0x4000208 = 0x01;
}


int main(void) {
    int i;
    int g = 0;
    points_gained = 0;


    *(unsigned short *)0x4000000 = 0x40 | 0x2 | 0x1000;


    *(unsigned short *)0x5000200 = 0;
    *(unsigned short *)0x5000202 = ((31) + (31<<5) + (31<<10));


         fillPalette();
         fillSprites();


         drawTetromino(20, 50, 50);



    (*(unsigned int*)0x3007FFC) = (int)&Handler;
    *(u16*)0x4000200 = 0x8 | 0x10;
    *(u16*)0x4000208 = 0x1;

    assembly();


    *(u16*)0x4000104 = 54551;
    *(u16*)0x4000106 = 0x0080 | 0x0040 | 0x0003;

    while (1) {
        switch (g) {
            case 0:
                main_screen();
                g = 1;
                break;

            case 1:
                level_1();
                g = game_over ? 0 : 2;
                break;

            case 2:
                level_2();
                g = game_over ? 0 : 2;
                break;
        }
    }

    return 0;
}
